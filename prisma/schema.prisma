// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  username      String
  email         String          @unique
  password      String
  posts         Post[]
  comments      Comment[]
  isAuthor      Boolean         @default(false)
  RefreshTokens RefreshTokens[]
}

model Post {
  id            Int       @id @default(autoincrement())
  title         String
  content       String
  authorId      Int
  author        User      @relation(fields: [authorId], references: [id])
  comments      Comment[]
  isPublished   Boolean   @default(false)
  publishedDate DateTime  @default(now())
  updatedDate   DateTime  @default(now())
}

model Comment {
  id          Int      @id @default(autoincrement())
  content     String
  postId      Int
  post        Post     @relation(fields: [postId], references: [id])
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  isPosted    Boolean  @default(false)
  postedDate  DateTime @default(now())
  updatedDate DateTime @default(now())
}

model RefreshTokens {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
  revoked   Boolean  @default(false)
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.VarChar(255)
  expiresAt DateTime
}
